<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.my.dao.IEmpRepository">
	<resultMap id="empMap" type="com.my.vo.EmpVO">
		<result property="employeeId" column="employee_id" />
		<result property="firstName" column="first_name" />
		<result property="lastName" column="last_name" />
		<result property="email" column="email" />
		<result property="phoneNumber" column="phone_number" />
		<result property="hireDate" column="hire_date" />
		<result property="jobId" column="job_id" />
		<result property="salary" column="salary" />
		<result property="commissionPct" column="commission_pct" />
		<result property="managerId" column="manager_id" />
		<result property="departmentId" column="department_id" />
	</resultMap>
	<!-- 결과타입: resiltType="com.my.app.vo.EmpDetailVO 파라미터타입 : parameterType=int -->
	<!-- select * employee_id as employeeId -->
	<select id="getEmpList" resultMap="empMap">
		select * from employees
	</select>
	<!-- 여기부분 진짜 모르겠다...타입고민... 정답: id가 중복이였고 if문은 아직 아래서 사용중(Count안되지만) 고쳣다ㅎ 방법1-->
	  <select id="getEmpListt" resultMap="empMap">
		select * from employees where department_id=#{deptId}
	</select>  
	
	
	<select id="getEmpCount" parameterType="int" resultType="int">
		select count(*) from employees
		<if test="deptId != null">
			where department_id = #{deptId}
		</if>
	</select>
	
	<select id="getEmpSearch" parameterType="String" resultMap="empMap">
		SELECT * FROM employees WHERE  #{category}  LIKE #{search}
				 ORDER BY employee_id DESC
	</select>

	<select id="getEmpInfo" parameterType="int"
		resultType="com.my.vo.EmpDetailVO">
		select employee_id as employeeId,
		first_name as firstName,
		last_name as lastName,
		email ,
		phone_number as phoneNumber,
		hire_date as
		hireDate,
		e.job_id as jobId,
		job_title as jobTitle,
		salary,
		commission_pct as commissionPct,
		e.manager_id as managerId,
		manager_name as managerName,
		e.department_id as departmentId,
		department_name as departmentName,
		emp_pic as empPic,
		emp_size as
		fileSize
		from employees e
		join jobs j
		on e.job_id=j.job_id
		join
		departments d
		on e.department_id=d.department_id
		left join
		(select
		employee_id manager_id, first_name||''||last_name manager_name
		from
		employees
		where employee_id in (select distinct manager_id from
		employees)) m
		on e.manager_id=m.manager_id
		where employee_id=#{empId}
	</select>

	<select id="getAllDeptId" resultType="hashmap">
		select department_id as
		"departmentId", department_name as "departmentName"
		from departments
	</select>

	<select id="getAllJobId" resultType="hashmap">
		select job_id as "jobId",
		job_title as "jobTitle" from jobs
	</select>

	<insert id="insertEmp"
		parameterType="com.my.vo.EmpVO">
		insert into employees
		values(#{employeeId},#{firstName},#{lastName},#{email},#{phoneNumber},
		SYSDATE,#{jobId},#{salary},#{commissionPct},#{managerId},#{departmentId},
		#{empPic},#{fileSize})
	</insert>

	<select id="getAllManagerId" resultType="hashmap">
		select employee_id as "managerId",
		first_name||' '||last_name as "managerName"
		from employees
		where employee_id in(select distinct manager_id from employees)
	</select>
	
	<delete id="deleteJobHistory" parameterType="int">
		delete from job_history where employee_id=#{empId}
	</delete>

	<update id="updateEmp" parameterType="com.my.vo.EmpVO">
		update employees set first_name=#{firstName}, last_name=#{lastName}, email=#{email},  
		phone_number=#{phoneNumber}, hire_date=#{hireDate}, job_id=#{jobId}, 
		salary=#{salary}, commission_pct=#{commissionPct}, manager_id=#{managerId},
		department_id=#{departmentId}, emp_Pic=#{empPic}, emp_size=#{fileSize} where employee_id=#{employeeId} 
	</update> 
	
	
	<update id="getUpdateManagers" parameterType="int">
		update (select * from employees where manager_id=#{managerId}) set manager_id=NULL
	</update>
	<update id="getUpdateManagerss" parameterType="int">
		update (select * from departments where manager_id=#{managerId}) set manager_id=NULL
	</update>
	<delete id="deleteEmp" parameterType="int">
		delete from employees where employee_id=#{empId}
	</delete>
	
	<select id="getidCheck" parameterType="int" resultType="int">
	select count(employee_id) from employees where employee_id=#{empId} 
	</select>

	
</mapper>